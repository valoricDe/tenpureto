name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-test-stack-${{ hashFiles('package.yaml') }}-${{ hashFiles('stack.yaml*') }}
          restore-keys: |
            ${{ runner.os }}-test-stack-${{ hashFiles('package.yaml') }}-
            ${{ runner.os }}-test-stack-
      - uses: mstksg/setup-stack@v1
      - name: Install dependencies
        run: make test-deps
      - name: Build
        run: make build-tests-coverage
      - name: Run tests
        run: make test-coverage
      - name: Generate coverage report
        run: make report-coverage
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./codecov.json
  test-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-docs-npm-${{ hashFiles('docs/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-test-docs-npm-
      - name: Install dependencies
        run: make npm-ci-docs
      - name: Run tests
        run: make test-docs
  publish-docs:
    needs: test-docs
    runs-on: ubuntu-latest
    if: github.repository == 'tenpureto/tenpureto' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-docs-npm-${{ hashFiles('docs/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-test-docs-npm-
      - name: Install dependencies
        run: make npm-ci-docs
      - name: Publish docs
        run: make publish-docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-action
          GIT_AUTHOR_EMAIL: github-action@tenpureto.org
          GIT_COMMITTER_NAME: github-action
          GIT_COMMITTER_EMAIL: github-action@tenpureto.org
  build-x86_64-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        run: sudo rm -rf /usr/local/lib/android /opt/ghc
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v8
      - uses: cachix/cachix-action@v6
        with:
          name: tenpureto
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - run: cachix use iohk
      - name: Build
        run: nix-build --keep-going -A static.tenpureto.components.exes.tenpureto
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: tenpureto-x86_64-linux
          path: result/bin/tenpureto
  build-x86_64-darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.stack
          key: ${{ runner.os }}-test-stack-${{ hashFiles('package.yaml') }}-${{ hashFiles('stack.yaml*') }}
          restore-keys: |
            ${{ runner.os }}-test-stack-${{ hashFiles('package.yaml') }}-
            ${{ runner.os }}-test-stack-
      - uses: mstksg/setup-stack@v1
      - name: Install dependencies
        run: make build-deps
      - name: Build
        run: make .build/staging/bin/tenpureto
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: tenpureto-x86_64-darwin
          path: .build/staging/bin/tenpureto
  package-x86_64-linux:
    runs-on: ubuntu-latest
    needs: build-x86_64-linux
    strategy:
      matrix:
        packaging: [ rpm, deb ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - uses: actions/download-artifact@v1
        with:
          name: tenpureto-x86_64-linux
      - name: Read package.yaml
        uses: CumulusDS/get-yaml-paths-action@v0.0.3
        id: package
        with:
          file: package.yaml
          name: name
          version: version
          homepage: homepage
          synopsis: synopsis
          author: author
      - name: Generate shell completions
        shell: bash
        run: |
          chmod +x ./tenpureto-x86_64-linux/tenpureto
          mkdir -p bash_completions zsh_completions dist
          ./tenpureto-x86_64-linux/tenpureto --bash-completion-script /usr/bin/tenpureto >bash_completions/tenpureto
          ./tenpureto-x86_64-linux/tenpureto --zsh-completion-script /usr/bin/tenpureto >zsh_completions/_tenpureto
      - name: Package ${{ matrix.packaging }}
        uses: docker://ansemjo/fpm:latest
        with:
          args:
            --input-type dir
            --output-type "${{ matrix.packaging }}"
            --force
            --package dist/
            --name "${{ steps.package.outputs.name }}"
            --version "${{ steps.package.outputs.version }}"
            --url "${{ steps.package.outputs.homepage }}"
            --description "${{ steps.package.outputs.synopsis }}"
            --maintainer "${{ steps.package.outputs.author }}"
            --depends git
            --deb-no-default-config-files
            ./tenpureto-x86_64-linux/tenpureto=/usr/bin/
            ./bash_completions/tenpureto=/etc/bash_completion.d/
            ./zsh_completions/_tenpureto=/usr/share/zsh/site-functions/
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: tenpureto-x86_64-linux.${{ matrix.packaging }}
          path: dist/
  release:
    runs-on: ubuntu-latest
    if: github.repository == 'tenpureto/tenpureto' && github.ref == 'refs/heads/master'
    needs:
      - test
      - build-x86_64-darwin
      - build-x86_64-linux
      - package-x86_64-linux
    steps:
      - uses: actions/checkout@v2
      - uses: jaliborc/action-general-autotag@1.0.1
        id: tag
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          source_file: "package.yaml"
          extraction_regex: "version:\\s*(\\d+\\.\\d+\\.\\d+)"
          tag_format: "v{version}"
      - uses: actions/download-artifact@v1
        if: steps.tag.outputs.tagsha != ''
        with:
          name: tenpureto-x86_64-linux
      - uses: actions/download-artifact@v1
        if: steps.tag.outputs.tagsha != ''
        with:
          name: tenpureto-x86_64-darwin
      - uses: actions/download-artifact@v1
        if: steps.tag.outputs.tagsha != ''
        with:
          name: tenpureto-x86_64-linux.deb
      - uses: actions/download-artifact@v1
        if: steps.tag.outputs.tagsha != ''
        with:
          name: tenpureto-x86_64-linux.rpm
      - if: steps.tag.outputs.tagsha != ''
        run: |
          mkdir release
          mv tenpureto-x86_64-linux/tenpureto release/tenpureto-${{ steps.tag.outputs.version }}-x86_64-linux
          mv tenpureto-x86_64-darwin/tenpureto release/tenpureto-${{ steps.tag.outputs.version }}-x86_64-darwin
          mv tenpureto-x86_64-linux.deb/* release/
          mv tenpureto-x86_64-linux.rpm/* release/
      - name: Release
        if: steps.tag.outputs.tagsha != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tagname }}
          name: ${{ steps.tag.outputs.version }}
          draft: true
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
